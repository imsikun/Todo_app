{"version":3,"sources":["components/Form.js","components/Todo.js","components/TodoList.js","App.js","index.js"],"names":["Form","inputText","setInputText","todos","setTodos","setStatus","type","className","onChange","e","target","value","onClick","preventDefault","text","completed","id","Math","random","name","Todo","todo","map","item","filter","el","TodoList","filterTodos","App","useState","status","filteredTodos","setFilteredTodos","useEffect","getLocalTodos","filterHandler","saveLocalTodos","localStorage","setItem","JSON","stringify","getItem","todoLocal","parse","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+NAiDeA,EA/CF,SAAC,GAA6D,IAA3DC,EAA0D,EAA1DA,UAAWC,EAA+C,EAA/CA,aAAcC,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,SAAUC,EAAgB,EAAhBA,UAmBxD,OACE,8BACE,iCACE,uBACEC,KAAK,OACLC,UAAU,aACVC,SAvBiB,SAAAC,GACvBP,EAAaO,EAAEC,OAAOC,QAuBhBA,MAAOV,IAET,wBACEM,UAAU,cACVD,KAAK,SACLM,QAzBkB,SAAAH,GACxBA,EAAEI,iBACFT,EAAS,GAAD,mBACHD,GADG,CAEN,CAAEW,KAAMb,EAAWc,WAAW,EAAOC,GAAoB,IAAhBC,KAAKC,aAEhDhB,EAAa,KAgBT,SAKE,mBAAGK,UAAU,yBAEf,qBAAKA,UAAU,SAAf,SACE,yBAAQC,SArBM,SAAAC,GACpBJ,EAAUI,EAAEC,OAAOC,QAoBoBQ,KAAK,QAAQZ,UAAU,cAAxD,UACE,wBAAQI,MAAM,MAAd,iBACA,wBAAQA,MAAM,YAAd,uBACA,wBAAQA,MAAM,cAAd,oC,OCNGS,EAjCF,SAAC,GAAqC,IAAnCN,EAAkC,EAAlCA,KAAMO,EAA4B,EAA5BA,KAAMlB,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAmBjC,OACE,sBAAKG,UAAU,OAAf,UACE,oBAAIA,UAAS,oBAAec,EAAKN,UAAY,YAAc,IAA3D,SACGD,IAEH,wBAAQF,QAnBY,WACtBR,EACED,EAAMmB,KAAI,SAAAC,GACR,OAAIA,EAAKP,KAAOK,EAAKL,GACZ,2BAEFO,GAFL,IAGER,WAAYQ,EAAKR,YAGdQ,OASyBhB,UAAU,eAA5C,SACE,mBAAGA,UAAU,mBAEf,wBAAQK,QAzBU,WACpBR,EAASD,EAAMqB,QAAO,SAAAC,GAAE,OAAIA,EAAGT,KAAOK,EAAKL,QAwBTT,UAAU,YAA1C,SACE,mBAAGA,UAAU,uBCTNmB,EAlBE,SAAC,GAAsC,IAApCvB,EAAmC,EAAnCA,MAAOC,EAA4B,EAA5BA,SAAUuB,EAAkB,EAAlBA,YACnC,OACE,qBAAKpB,UAAU,iBAAf,SACE,oBAAIA,UAAU,YAAd,SACGoB,EAAYL,KAAI,SAAAD,GAAI,OACnB,cAAC,EAAD,CAEEP,KAAMO,EAAKP,KACXO,KAAMA,EACNlB,MAAOA,EACPC,SAAUA,GAJLiB,EAAKL,YC2DPY,MAhEf,WAAgB,MAEoBC,mBAAS,IAF7B,mBAEP5B,EAFO,KAEIC,EAFJ,OAGY2B,mBAAS,IAHrB,mBAGP1B,EAHO,KAGAC,EAHA,OAIcyB,mBAAS,OAJvB,mBAIPC,EAJO,KAICzB,EAJD,OAK4BwB,mBAAS,IALrC,mBAKPE,EALO,KAKQC,EALR,KAQdC,qBAAU,WACRC,MACC,IAGHD,qBAAU,WACRE,IACAC,MACC,CAACjC,EAAO2B,IAEX,IAAMK,EAAgB,WACpB,OAAQL,GACN,IAAK,YACHE,EAAiB7B,EAAMqB,QAAO,SAAAH,GAAI,OAAuB,IAAnBA,EAAKN,cAC3C,MACF,IAAK,cACHiB,EAAiB7B,EAAMqB,QAAO,SAAAH,GAAI,OAAuB,IAAnBA,EAAKN,cAC3C,MACF,QACEiB,EAAiB7B,KAMjBiC,EAAiB,WACrBC,aAAaC,QAAQ,QAASC,KAAKC,UAAUrC,KAEzC+B,EAAgB,WACpB,GAAqC,MAAjCG,aAAaI,QAAQ,SACvBJ,aAAaC,QAAQ,QAASC,KAAKC,UAAU,SACxC,CACL,IAAIE,EAAYH,KAAKI,MACnBN,aAAaI,QAAQ,QAASF,KAAKC,UAAUrC,KAE/CC,EAASsC,KAIb,OACE,sBAAKnC,UAAU,MAAf,UACE,iCACE,oDAEF,cAAC,EAAD,CACEN,UAAWA,EACXE,MAAOA,EACPC,SAAUA,EACVF,aAAcA,EACdG,UAAWA,IAEb,cAAC,EAAD,CAAUF,MAAOA,EAAOC,SAAUA,EAAUuB,YAAaI,QC1D/Da,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.35fd4ac9.chunk.js","sourcesContent":["import React from 'react'\n\nconst Form = ({ inputText, setInputText, todos, setTodos, setStatus }) => {\n  //write a function that will update the field\n  const inputTextHandler = e => {\n    setInputText(e.target.value)\n  }\n\n  const submitTodoHandler = e => {\n    e.preventDefault()\n    setTodos([\n      ...todos,\n      { text: inputText, completed: false, id: Math.random() * 1000 }\n    ])\n    setInputText('')\n  }\n\n  const statusHandler = e => {\n    setStatus(e.target.value)\n  }\n\n  return (\n    <div>\n      <form>\n        <input\n          type='text'\n          className='todo-input'\n          onChange={inputTextHandler}\n          value={inputText}\n        />\n        <button\n          className='todo-button'\n          type='submit'\n          onClick={submitTodoHandler}\n        >\n          <i className='fas fa-plus-square'></i>\n        </button>\n        <div className='select'>\n          <select onChange={statusHandler} name='todos' className='filter-todo'>\n            <option value='all'>All</option>\n            <option value='completed'>Completed</option>\n            <option value='uncompleted'>Uncompleted</option>\n          </select>\n        </div>\n      </form>\n    </div>\n  )\n}\n\nexport default Form\n","import React from 'react'\n\nconst Todo = ({ text, todo, todos, setTodos }) => {\n  //events\n  const deleteHandler = () => {\n    setTodos(todos.filter(el => el.id !== todo.id))\n  }\n  const completeHandler = () => {\n    setTodos(\n      todos.map(item => {\n        if (item.id === todo.id) {\n          return {\n            //head on the oter property and just modify the completed here\n            ...item,\n            completed: !item.completed\n          }\n        }\n        return item\n      })\n    )\n  }\n  return (\n    <div className='todo'>\n      <li className={`todo-item ${todo.completed ? 'completed' : ''}`}>\n        {text}\n      </li>\n      <button onClick={completeHandler} className='complete-btn'>\n        <i className='fas fa-check'></i>\n      </button>\n      <button onClick={deleteHandler} className='trash-btn'>\n        <i className='fas fa-trash'></i>\n      </button>\n    </div>\n  )\n}\nexport default Todo\n","import React from 'react'\nimport Todo from './Todo'\n\nconst TodoList = ({ todos, setTodos, filterTodos }) => {\n  return (\n    <div className='todo-container'>\n      <ul className='todo-list'>\n        {filterTodos.map(todo => (\n          <Todo\n            key={todo.id}\n            text={todo.text}\n            todo={todo}\n            todos={todos}\n            setTodos={setTodos}\n          />\n        ))}\n      </ul>\n    </div>\n  )\n}\n\nexport default TodoList\n","import React, { useState, useEffect } from 'react'\nimport './App.css'\nimport Form from './components/Form'\nimport TodoList from './components/TodoList'\nfunction App () {\n  //all the states\n  const [inputText, setInputText] = useState('')\n  const [todos, setTodos] = useState([])\n  const [status, setStatus] = useState('all')\n  const [filteredTodos, setFilteredTodos] = useState([])\n\n  //run once when the app start\n  useEffect(() => {\n    getLocalTodos()\n  }, [])\n\n  //use effect\n  useEffect(() => {\n    filterHandler()\n    saveLocalTodos()\n  }, [todos, status])\n  //function & events\n  const filterHandler = () => {\n    switch (status) {\n      case 'completed':\n        setFilteredTodos(todos.filter(todo => todo.completed === true))\n        break\n      case 'uncompleted':\n        setFilteredTodos(todos.filter(todo => todo.completed === false))\n        break\n      default:\n        setFilteredTodos(todos)\n        break\n    }\n  }\n\n  //save to local storeage\n  const saveLocalTodos = () => {\n    localStorage.setItem('todos', JSON.stringify(todos))\n  }\n  const getLocalTodos = () => {\n    if (localStorage.getItem('todos') == null) {\n      localStorage.setItem('todos', JSON.stringify([]))\n    } else {\n      let todoLocal = JSON.parse(\n        localStorage.getItem('todos', JSON.stringify(todos))\n      )\n      setTodos(todoLocal)\n    }\n  }\n\n  return (\n    <div className='App'>\n      <header>\n        <h1>Subh's Todo List</h1>\n      </header>\n      <Form\n        inputText={inputText}\n        todos={todos}\n        setTodos={setTodos}\n        setInputText={setInputText}\n        setStatus={setStatus}\n      />\n      <TodoList todos={todos} setTodos={setTodos} filterTodos={filteredTodos} />\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}